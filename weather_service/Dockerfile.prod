# Start from golang base image
FROM golang:1.21-alpine as builder

# Set the current working directory inside the container
WORKDIR /go-expert-lab-google-cloud-run/weather_service

#
RUN apk update && apk upgrade && apk add --no-cache ca-certificates
RUN update-ca-certificates

# Copy go.mod, go.sum files and download deps
COPY go.mod go.sum ./
RUN go mod download

# Copy sources to the working directory
COPY . .

# Set the Go environment
ENV GOOS linux
ENV CGO_ENABLED 0
ENV GOARCH amd64

# Run the app
ARG project
ENV PROJECT $project

RUN go build -a -v -o weather-service-api $project

# Deployment container
FROM scratch

WORKDIR /go-expert-lab-google-cloud-run/weather_service

# Copy .env file
COPY .env ./
COPY ./configs/config.production.json ./configs/

# Run the app
# ARG port
# ENV PORT $port

# Set the App environment
ARG app_env
ENV APP_ENV $app_env

# Copy build artifacts from the previous stage
COPY --from=builder /go-expert-lab-google-cloud-run/weather_service/weather-service-api /weather-service-api
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Run the executable
CMD ["/weather-service-api"]